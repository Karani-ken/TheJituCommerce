@page "/"
@inject IJSRuntime jsRuntime
@inject IProductInterface productInterface
@inject NavigationManager navigationManager
<PageTitle>Home Page</PageTitle>
<div class="row" style="width:100%;">
    @if (isLoading)
    {
        <p>Loading...</p>
    }
    else
    {
        @if(authenticated && role == "Admin")
        {
            <div class="row mb-4">
                <div class="col-6">
                    Product  List
                </div>
                <div class="col-6 text-end">
                    <a href="product/add" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> &nbsp; Add Product
                    </a>
                </div>
            </div>
        }

            @if(products.Count == 0)
            {
            <p><i>You have no products</i></p>
            }
            else
            {
                <div class="row">
                    @foreach (var product in products)
                    {
                        <ProductCard Product="product" />
                    }

                </div>
            }
        
     
    }
</div>


@code{
    private List<ProductDto> products = new List<ProductDto>();
    private bool isLoading = true;
    private string role { get; set; }
    private bool authenticated { get; set; }
    [CascadingParameter]
    public Task<AuthenticationState> _authState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        products = await productInterface.GetProductsAsync();
        isLoading = false;
        var authState = await _authState;
        role = authState.User.FindFirst("role")?.Value;
        authenticated = authState.User.Identity.IsAuthenticated;
        Console.WriteLine(authenticated);


    }
}
